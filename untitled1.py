# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1o3qDN4EkeB7yQjZfDItJ-fGnEOD_m-Pl
"""

import pandas as pd
import numpy as np

sr=pd.Series([15,40,20])
print(sr[2])

sp=pd.Series(15)
sp[4]=16
print(sp[4])

sc=pd.Series(["Mumbai","Tokyo","New York","Vienna","Munich"],index=["India","Japan","USA","Austria","Germany"])
print(sc[-1])

df=np.genfromtxt("employee.csv",dtype=None,delimiter=',',names=True,encoding=None)

print(df[df['sal']>70000])

em=pd.read_csv("employees.csv")

em['JOB_ID'].unique()

print(em[em['JOB_ID']=="IT_PROG"])

em[em['LAST_NAME'].duplicated()]

em["EMPLOYEE_ID"].count()

em["SALARY"].sum()

sem=em.sort_values(by="SALARY",ascending=True)
print(sem)

em["HIRED_DATE"]=pd.to_datetime(em["HIRE_DATE"])
print(em["HIRED_DATE"])

sem=em.sort_values(by=["HIRED_DATE"],ascending=True).head()
print(sem)

ec=pd.read_csv("E-Commerce.csv")

ec.head()

ec.count()

ec["Quantity"].sum()

avg=ec.groupby("Category")["Price"].mean().round()

avg["Accessories"]

ec[ec["Price"]==ec["Price"].max()]

ec.loc[ec["Price"].idxmax()]

ec["Total"]=ec["Quantity"]*ec["Price"]

ec["Total"].sort_values(ascending=False).head(5)

ec.groupby(["Customer_ID","Order_ID"])["Total"].sum().idxmax()

ec[ec["Order_Date"]==("18-01-2024")]



nf=pd.read_csv("Netflix_Dataset.csv")

nf.head()

nf[nf["type"]=="Movie"]["title"].unique()

nf[nf["type"]=="TV Show"]["title"].unique()

nf.isnull().sum()

nf["genre"].unique()



nf["director"].unique()

nf[(nf["type"]=="Movie")&(nf["release_year"]==2019)]

nf[(nf["type"]=="TV Show")&(nf["director"]=="Neeraj Pandey")]

nf[(nf["type"]=="Movie")&(nf["cast"].str.contains("Akshay Kumar"))]

rt=nf[(nf["type"]=="Movie")&(nf["rating"]=="UA")]

rt[rt["duration"].str.replace("min","").astype(int)>150]

nf[nf["genre"].str.contains("Drama","Comedy")]

nf.sort_values(by=["release_year"],ascending=True).head()

ty=nf.sort_values(by="type")

ty.sort_values(by="title")

nf.sort_values(["type","title"])

nf.groupby("release_year")["type"].count()

nf.groupby("genre")["title"].count().head(3)

nf.groupby("director")["title"].count()

nf.groupby("rating")["title"].count()

tm=nf[nf["title"].str.contains("Man")].count()

nf[nf["title"].str.contains("Love","Life")].count()

nf.groupby("cast")["title"].count()

nf[nf["director"].str.contains("Rajkumar Hirani","Anurag Kashyap")]

nf[nf.duplicated()]